{% comment %}
  Animal Card Snippet
  Usage: {% render 'product-card', product: product %}
{% endcomment %}

{% comment %}
  Accepts alt_title and badge_style as optional params for block-based rendering
  Accepts alt_image as an optional param for alternative product image
{% endcomment %}

{% liquid
  assign card_style = badge_style | default: product.metafields.custom.card_style
  case card_style
    when 'popular'
      assign badge_text = 'Most popular'
      assign badge_bg_color = section.settings.badge_popular_bg_color | default: 'var(--color-badge-popular-bg)'
      assign badge_text_color = section.settings.badge_popular_text_color | default: 'var(--color-badge-popular-text)'
    when 'best_value'
      assign badge_text = 'Best value'
      assign badge_bg_color = section.settings.badge_best_value_bg_color | default: 'var(--color-text-primary)'
      assign badge_text_color = section.settings.badge_best_value_text_color | default: 'var(--color-badge-best-value-text)'
    else
      assign badge_text = ''
      assign badge_bg_color = ''
      assign badge_text_color = ''
  endcase
%}

<div class="swiper-slide animal-card relative bg-white rounded-[20px] shadow-[0px_2px_8px_rgba(16,16,17,0.15)] duration-200 py-10 px-[25px] h-full flex flex-col">
  {% comment %} Badge {% endcomment %}
  {% if badge_text != blank %}
    <div class="absolute top-0 left-0 z-10 h-fit">
      <span
        class="inline-block text-center h-6 w-[130px] custom-rounded"
        style="background-color: {{ badge_bg_color }}; color: {{ badge_text_color }};"
      >
        {{ badge_text }}
      </span>
    </div>
  {% endif %}

  {% comment %} Product Title {% endcomment %}
  <h3 class="text-[21px] leading-7 mb-4 tracking-normal">
    {{ alt_title | default: product.title }}
  </h3>

  {% comment %} Product Image {% endcomment %}
  <div class="relative mb-4 bg-gradient-to-br from-orange-100 to-orange-200 flex-shrink-0">
    {% if alt_image %}
      <img
        src="{{ alt_image | image_url: width: 312 }}"
        alt="{{ alt_title | default: product.title | escape }}"
        class="w-full h-[252px] object-cover"
        width="312"
        height="252"
        loading="lazy"
      >
    {% elsif product.featured_image %}
      <img
        src="{{ product.featured_image | image_url: width: 312 }}"
        alt="{{ product.featured_image.alt | escape }}"
        class="w-full h-[252px] object-cover"
        width="312"
        height="252"
        loading="lazy"
      >
    {% else %}
      <div class="w-full h-full flex items-center justify-center">
        <svg class="w-16 h-16 text-orange-300" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z" clip-rule="evenodd" />
        </svg>
      </div>
    {% endif %}
  </div>

  {% if product.variants.size > 1 %}
    <div class="pt-1 mb-5 relative">
      <select
        class="w-full py-[14px] px-3 pr-10 border border-[#cccccc] text-[16px] leading-6 tracking-widest bg-primary-bg focus:outline-none focus:ring-2 focus:ring-primary-blue focus:border-transparent font-normal appearance-none"
        onchange="updateVariant(this, '{{ product.id }}')"
      >
        {% for variant in product.variants %}
          <option value="{{ variant.id }}" data-price="{{ variant.price | money }}">
            {{ variant.title }}
          </option>
        {% endfor %}
      </select>

      <div class="pointer-events-none absolute inset-y-0 right-4 flex items-center">
        {% render 'icon-shevron-down' %}
      </div>
    </div>
  {% endif %}

  {% comment %} Pricing {% endcomment %}
  <div class="mb-4 text-[21px] leading-7 font-normal">
    {% if product.compare_at_price > product.price %}
      <div class="flex items-baseline gap-2">
        <span>
          {{ product.compare_at_price | money }}
        </span>
        <span class="text-primary-gray price">(${{ product.price | divided_by: 100.0 | round }}/test)</span>
      </div>
    {% else %}
      <span class="price">
        {{ product.price | money }}
      </span>
    {% endif %}
  </div>

  {% comment %} Add to Cart Button {% endcomment %}
  <div class="mb-6">
    <form action="/cart/add" method="post" enctype="multipart/form-data" class="w-full">
      <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">

      <button
        type="submit"
        class="bg-primary-blue text-white py-[10px] px-[47px] rounded-[20px] transition-colors duration-200 flex items-center justify-center gap-2"
        {% unless product.available %}
          disabled
        {% endunless %}
      >
        {% if product.available %}
          Add to Bag
        {% else %}
          Sold Out
        {% endif %}
      </button>
    </form>
  </div>

  {% comment %} Features List {% endcomment %}
  {% if product.metafields.custom.features %}
    <div class="space-y-4">
      {% assign features = product.metafields.custom.features.value %}
      {% for feature in features %}
        <div class="flex items-start gap-2">
          {% render 'icon-checklist' %}
          <span>{{ feature }}</span>
        </div>
      {% endfor %}

      {% comment %} Learn more link {% endcomment %}
      {% if product.url %}
        <div class="flex items-start gap-2">
          {% render 'icon-checklist' %}
          <a href="{{ product.url }}" class="text-primary-blue"> Learn more </a>
        </div>
      {% endif %}
    </div>
  {% endif %}
</div>

{% comment %} JavaScript for variant switching {% endcomment %}
<script>
  function updateVariant(select, productId) {
    const selectedOption = select.options[select.selectedIndex];
    const newPrice = selectedOption.dataset.price;
    const card = select.closest('.animal-card');
    const priceElement = card && card.querySelector('.price');
    if (priceElement && newPrice) {
      priceElement.textContent = newPrice;
    }

    const hiddenInput = card && card.querySelector('input[name="id"]');
    if (hiddenInput) {
      hiddenInput.value = selectedOption.value;
    }
  }
</script>

<style>
  .swiper-slide {
    width: 362px !important;
    height: auto !important;
  }
  .custom-rounded {
    border-top-left-radius: 20px;
    border-bottom-left-radius: 0;
    border-top-right-radius: 0rem;
    border-bottom-right-radius: 20px;
  }
</style>
