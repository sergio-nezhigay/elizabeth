{% comment %}
  Product Card Snippet
  Usage: {% render 'product-card', product: product %}

  Customizable settings through section settings or metafields:
  - card_style: 'default', 'popular', 'best_value'
  - show_features: true/false
  - button_style: 'primary', 'secondary'
{% endcomment %}

{% liquid
  assign show_features = show_features | default: true
  assign button_style = button_style | default: 'primary'
  assign features_limit = features_limit | default: 6

  case product.metafields.custom.card_style
    when 'popular'
      assign badge_text = 'Most popular'
      assign badge_color = 'bg-orange-500'
      assign border_color = 'border-orange-200'
    when 'best_value'
      assign badge_text = 'Best value'
      assign badge_color = 'bg-gray-900'
      assign border_color = 'border-gray-200'
    else
      assign badge_text = ''
      assign badge_color = ''
      assign border_color = 'border-gray-200'
  endcase
%}

<div class="swiper-slide relative bg-white rounded-lg shadow-sm border {{ border_color }} hover:shadow-md transition-shadow duration-200 py-10 px-[25px] h-full flex flex-col">
  {% comment %} Badge {% endcomment %}
  {% if badge_text != blank %}
    <div class="absolute top-0 left-0 z-10 h-fit">
      <div class="inline-block {{ badge_color }} text-white h-6  font-semibold  custom-rounded">
        {{ badge_text }} k K
      </div>
    </div>
  {% endif %}

  {% comment %} Product Image {% endcomment %}
  <div class="relative mb-6 bg-gradient-to-br from-orange-100 to-orange-200 rounded-lg overflow-hidden h-48 flex-shrink-0">
    {% if product.featured_image %}
      <img
        src="{{ product.featured_image | img_url: '400x400' }}"
        alt="{{ product.featured_image.alt | escape }}"
        class="w-full h-full object-cover"
        loading="lazy"
      >
    {% else %}
      <div class="w-full h-full flex items-center justify-center">
        <svg class="w-16 h-16 text-orange-300" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z" clip-rule="evenodd" />
        </svg>
      </div>
    {% endif %}
  </div>

  {% comment %} Product Title {% endcomment %}
  <h3 class="text-xl font-semibold text-gray-900 mb-4 line-clamp-2 min-h-[3.5rem] flex-shrink-0">
    {{ product.title }}
  </h3>

  {% comment %} Pricing {% endcomment %}
  <div class="mb-6 flex-shrink-0">
    {% if product.compare_at_price > product.price %}
      <div class="flex items-baseline gap-2">
        <span class="text-lg text-gray-500">
          {{ product.compare_at_price | money }}
        </span>
        <span class="text-2xl font-bold text-gray-900">
          {{ product.price | money }}
        </span>
      </div>
    {% else %}
      <span class="text-2xl font-bold text-gray-900">
        {{ product.price | money }}
      </span>
    {% endif %}
  </div>

  {% comment %} Variant Selector (for multi-pack options) {% endcomment %}
  {% if product.variants.size > 1 %}
    <div class="mb-6">
      <select
        class="w-full p-3 border border-gray-300 rounded-lg bg-white text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
        onchange="updateVariant(this, '{{ product.id }}')"
      >
        {% for variant in product.variants %}
          <option value="{{ variant.id }}" data-price="{{ variant.price | money }}">
            {{ variant.title }}
          </option>
        {% endfor %}
      </select>
    </div>
  {% endif %}

  {% comment %} Add to Cart Button {% endcomment %}
  <div class="mb-6">
    <form action="/cart/add" method="post" enctype="multipart/form-data" class="w-full">
      <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">

      {% if button_style == 'primary' %}
        <button
          type="submit"
          class="w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-6 rounded-lg transition-colors duration-200 flex items-center justify-center gap-2"
          {% unless product.available %}
            disabled
          {% endunless %}
        >
          {% if product.available %}
            Add to Bag
          {% else %}
            Sold Out
          {% endif %}
        </button>
      {% else %}
        <button
          type="submit"
          class="w-full border-2 border-blue-600 text-blue-600 hover:bg-blue-50 font-medium py-3 px-6 rounded-lg transition-colors duration-200"
          {% unless product.available %}
            disabled
          {% endunless %}
        >
          {% if product.available %}
            Add to Bag
          {% else %}
            Sold Out
          {% endif %}
        </button>
      {% endif %}
    </form>
  </div>

  {% comment %} Features List {% endcomment %}
  {% if show_features and product.metafields.custom.features %}
    <div class="space-y-3 mt-auto flex-grow">
      {% assign features = product.metafields.custom.features.value %}
      {% for feature in features limit: features_limit %}
        <div class="flex items-start gap-3">
          <svg class="w-5 h-5 text-blue-600 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
          </svg>
          <span class="text-sm text-gray-700 leading-relaxed">{{ feature }}</span>
        </div>
      {% endfor %}

      {% comment %} Learn more link {% endcomment %}
      {% if product.url %}
        <div class="pt-2">
          <a href="{{ product.url }}" class="text-sm text-blue-600 hover:text-blue-700 font-medium"> Learn more </a>
        </div>
      {% endif %}
    </div>
  {% endif %}
</div>

{% comment %} JavaScript for variant switching {% endcomment %}
<script>
  function updateVariant(select, productId) {
    const selectedOption = select.options[select.selectedIndex];
    const newPrice = selectedOption.dataset.price;
    const priceElement = select.closest('.product-card').querySelector('.price');
    if (priceElement && newPrice) {
      priceElement.textContent = newPrice;
    }

    // Update hidden input
    const hiddenInput = select.closest('form').querySelector('input[name="id"]');
    if (hiddenInput) {
      hiddenInput.value = selectedOption.value;
    }
  }
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  .swiper-slide {
    width: 362px !important;
    height: auto !important;
    display: flex;
    justify-content: center;
  }
  .custom-rounded {
    border-top-left-radius: 20px;
    border-bottom-left-radius: 0;
    border-top-right-radius: 0rem;
    border-bottom-right-radius: 20px;
  }
</style>
